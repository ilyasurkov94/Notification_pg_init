version: '3.5'

services:  
  rabbit_mq:
    image: rabbitmq:3.10.7-management
    hostname: rabbit_mq
    container_name: rabbit_mq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - rabbit_mq_vol:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_FIRST_OPEN_PORT}:${RABBITMQ_FIRST_INTERIOR_PORT}"
      - "${RABBITMQ_SECONDT_OPEN_PORT}:${RABBITMQ_SECOND_INTERIOR_PORT}"
    networks: 
      - notification_network

  postgres:
    container_name: postgres_notifications
    hostname: postgres_notifications
    image: postgres:13
    restart: always
    env_file:
      - /.env
    ports: 
      - '${NOTIFICATION_DB_EXPOSED_PORT}:${NOTIFICATION_DB_INTERRIOR_PORT}'
    command: -p ${NOTIFICATION_DB_INTERRIOR_PORT}
    environment:
      POSTGRES_USER: ${NOTIFICATION_DB_USER}
      POSTGRES_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
      POSTGRES_DB: ${NOTIFICATION_DB_NAME}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - postgres_notifications_vol:/var/lib/postgres/data
    networks:
      - notification_network

  postgres_init:
    container_name: postgres_init
    build: ./pg_init
    env_file: /.env
    depends_on:
      postgres:
        condition: service_started
    networks:
      - notification_network

networks:
  notification_network:
    name: notification_network
    driver: bridge

volumes:
  postgres_notifications_vol:
  rabbit_mq_vol:


